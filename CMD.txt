===========================================================================
Ansible Commands
===========================================================================

$ export ANSIBLE_HOST='13.234.38.216'
$ ssh -i ${AWS_KEY} ubuntu@${ANSIBLE_HOST}
$ sudo hostnamectl set-hostname ansiblecontroller
$ mkdir /home/ubuntu/.aws
$ scp -i ${AWS_KEY} ${AWS_KEY} ubuntu@${ANSIBLE_HOST}:/home/ubuntu/.aws
$ sudo vim /etc/environment
    AWS_KEY=/home/ubuntu/.aws/MyPair.pem
Logout and reconnect

$ cd Ansible/

---------------------------------------------------------------------------
Install Ansible
---------------------------------------------------------------------------

$ sudo apt update
$ sudo apt install software-properties-common
$ sudo add-apt-repository --yes --update ppa:ansible/ansible
$ sudo apt install ansible -y
$ ansible --version

---------------------------------------------------------------------------
Copy the Ansible Roles and Playbooks
---------------------------------------------------------------------------

$ scp -r -i ${AWS_KEY} Ansible ubuntu@${ANSIBLE_HOST}:/home/ubuntu/
___________________________________________________________________________

$ ansible all -m ping
$ ansible-playbook jenkins-playbook.yml
$ ansible jenkins_nodes -a "cat /.dockercfg/dockerhubpassword.txt"
$ ansible jenkins_nodes -a "sudo cat /var/lib/jenkins/secrets/initialAdminPassword"
$ ansible jenkins_nodes -a "git version"
$ ansible jenkins_nodes -a "mvn -version"
$ ansible jenkins_nodes -a "docker version"
$ ansible jenkins_nodes -a "docker images"
$ ansible jenkins_nodes -a "cat /etc/passwd"
$ ansible jenkins_nodes -a "sudo cat /etc/sudoers"

===========================================================================
EKSCTL Commands
===========================================================================
$ export ANSIBLE_HOST='13.127.64.118'
$ scp -r -i ${AWS_KEY} Ansible ubuntu@${ANSIBLE_HOST}:/home/ubuntu/
$ ssh -i ${AWS_KEY} ubuntu@${ANSIBLE_HOST}

$ ansible all -m ping
$ ansible-playbook eksctl-playbook.yml

$ ansible k8s_master_nodes -a "which kubectl"
$ ansible k8s_master_nodes -a "helm version"

Verify these softwares

    $ kubectl version
    $ eksctl version
    $ aws-iam-authenticator version
    $ aws --version
    $ helm version

---------------------------------------------------------------------------
Create EKS cluster and nodes from K-Management Host
---------------------------------------------------------------------------

$ export K8S_MGMT_HOST='65.2.172.2'
$ scp -r -i ${AWS_KEY} devopstest-chart ubuntu@${K8S_MGMT_HOST}:/home/ubuntu/devopstest-chart
$ ssh -i ${AWS_KEY} ubuntu@${K8S_MGMT_HOST}

$ eksctl create cluster 
--name cluster-name  \
--region region-name \
--node-type instance-type \
--nodes-min 2 \
--nodes-max 2 \ 
--zones <AZ-1>,<AZ-2>

Example:

$ eksctl create cluster  \
--name devops-test \
--region ap-south-1 \
--node-type t2.medium \
--nodes-min 0 \
--nodes-max 5

Configure the kubeconfig

    $ aws eks get-token --cluster-name=devops-test
    $ aws eks update-kubeconfig --region ap-south-1 --name devops-test

Get the Nodegroup Information

    $ eksctl get nodegroup --cluster devops-test --region ap-south-1

Scale the Cluster as you like

$ eksctl scale nodegroup  \
--region ap-south-1 \
--cluster devops-test  \
--name ng-035ad51d  \
--nodes 1

$ eksctl scale nodegroup  \
--region ap-south-1 \
--cluster devops-test  \
--name ng-035ad51d  \
--nodes 0

Note : Configure the security group of cluster that is associated with cluster node.
give public access.

Delete the Cluster

    $ eksctl delete cluster --name=devops-test --region=ap-south-1

Get the Cluster Info

    $ eksctl get cluster --region ap-south-1

Do the Kubernetes operations

    $ kubectl get nodes
    $ kubectl get pods
    $ kubectl get services

Access ->  http://[CLUSTER_NODE_IP]:32000

---------------------------------------------------------------------------
Copy the Kubeconfig from K-Management Host to Jenkins Host
---------------------------------------------------------------------------

$ cat /home/ubuntu/.kube/config

$ export JENKINS_HOST='43.204.35.160'
$ export K8S_MGMT_HOST='43.205.138.173'

$ ssh -i ${AWS_KEY} ubuntu@${JENKINS_HOST}
$ ssh -i ${AWS_KEY} ubuntu@${K8S_MGMT_HOST}

$ scp -r -i ${AWS_KEY} ubuntu@${K8S_MGMT_HOST}:/home/ubuntu/.kube .
$ scp -r -i ${AWS_KEY} .kube/config ubuntu@${JENKINS_HOST}:/home/ubuntu/.kube/config

On Jenkins Host

$ mkdir .kube
$ sudo cp -r .kube /var/lib/jenkins/
$ sudo chmod 777 /var/lib/jenkins/.kube/config

